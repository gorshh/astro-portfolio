---
interface Props {
  topic: string;
  title: string;
}

const { topic, title } = Astro.props;

const segments = topic.split("/");
const paths = segments.map(
  (_, i) =>
    "/" +
    segments
      .slice(0, i + 1)
      .join("/")
      .toLowerCase()
);
---

<nav aria-label="breadcrumb" class="breadcrumb">
  <ul>
    {
      segments.map((seg, i) => (
        <span>
          <a
            class="breadcrumb--link"
            href={paths[i].replace("blog", "b").replace(" ", "-")}
          >
            {seg}
          </a>
          {i < segments.length && <span class="separator">/</span>}
        </span>
      ))
    }
    <span>{title}</span>
  </ul>
</nav>

<style>
  .breadcrumb ul {
    list-style: none;
    padding: 0;
    display: flex;
    gap: 0.2rem;
    font-size: 14px;
    color: #cfcfd3;
    flex-wrap: wrap;
    margin-bottom: 1rem;

    &::before {
      display: none;
    }
  }

  .breadcrumb li span {
    color: rgb(143, 143, 153);
  }

  .breadcrumb--link {
    color: white;
    text-decoration: none;
    font-weight: 500;
  }

  .hide {
    display: none;
  }
</style>
<script is:inline>
  function updateBreadcrumbTruncate() {
    const breadcrumb = document.querySelector(".breadcrumb");
    if (!breadcrumb) return;

    const spans = breadcrumb.querySelectorAll("span");
    const lastSpan = spans[spans.length - 1];
    if (!lastSpan) return;
    if (window.innerWidth <= 768) {
      lastSpan.classList.add("hide");
    } else {
      lastSpan.classList.remove("hide");
    }
  }

  window.addEventListener("resize", updateBreadcrumbTruncate);
  window.addEventListener("DOMContentLoaded", updateBreadcrumbTruncate);
</script>
