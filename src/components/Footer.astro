---
import P from "./common/P.astro";
import Link from "./common/Link.astro";
import Container from "./common/Container.astro";
---

<footer id="contact">
  <Container class="lets-talk">
    <P size="display-xxl" fontFamily="pp-mori">Let’s work together</P>

    <div style="display: flex; margin-top: 2rem; gap: 1rem;">
      <button>hi@jorshh.com</button>
      <button>+527772727734</button>
    </div>
  </Container>
  <Container class="footer">
    <div class="about">
      <div>
        <P size="body-sm" class="about--title">Version</P>
        <P size="body-sm" fontFamily="pp-mori">2025 © Edition</P>
      </div>
      <div>
        <P size="body-sm" class="about--title">Local time</P>
        <P size="body-sm" fontFamily="pp-mori" id="local-time" />
      </div>
      <div>
        <P size="body-sm" class="about--title">Language</P>
        <div class="language">
          <P
            size="body-sm"
            fontFamily="pp-mori"
            as="a"
            class="lang"
            href="/"
            data-lang="en">English</P
          >
          <P size="body-sm" fontFamily="pp-mori">/</P>
          <P
            size="body-sm"
            fontFamily="pp-mori"
            as="a"
            class="lang"
            href="/es"
            data-lang="es">Spanish</P
          >
        </div>
      </div>
    </div>
    <div class="socials">
      <P size="body-sm" class="about--title">Socials</P>
      <div>
        <Link href="https://www.linkedin.com/in/jorshh/">Linkedin</Link>
        <Link href="https://www.instagram.com/jorshh.me/">Instagram</Link>
        <Link href="https://github.com/gorshh/">Github</Link>
      </div>
    </div>
  </Container>
</footer>

<style>
  footer {
    height: 100dvh;
    background-color: var(--black-color);
    color: var(--white-color);
    position: sticky;
    bottom: 0;
    z-index: 1;
  }

  .footer {
    position: absolute;
    bottom: 1rem;
    display: flex;
    justify-content: space-between;
    width: 100%;
    flex-direction: column;
    gap: 1rem;
    @media (min-width: 768px) {
      flex-direction: row;
    }
  }

  .lets-talk {
    /* border: solid 1px red; */
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .about {
    display: flex;
    flex-wrap: wrap; /* permite que los hijos se vayan a otra línea */
    gap: 1rem;
    border-bottom: 1px rgb(66, 66, 66) solid;
    padding-bottom: 0.5rem;

    @media (min-width: 768px) {
      flex-wrap: nowrap;
      border-bottom: none;
    }
  }

  .about > div {
    flex: 1 1 auto;
  }

  .about > div:last-child {
    flex-basis: 100%; 
    margin-top: 0.5rem;

    @media (min-width: 768px) {
      flex-basis: auto;
      margin-top: 0;
    }
  }

  .about--title {
    opacity: 0.8;
  }

  .language {
    display: flex;
    align-items: center;
    gap: 0.5rem;

    a {
      text-decoration: none;
    }

    a.active {
      opacity: 0.7;
      pointer-events: none;
    }
  }

  button {
    /* padding: 1.5rem 3rem; */
    border-radius: 2rem;
    border: 1px rgb(83, 83, 83) solid;
    cursor: pointer;
    background-color: transparent;
    color: var(--white-color);
  }
</style>

<script>
  const langs = document.querySelectorAll(".lang");
  langs.forEach((lang) => {
    const l = lang as HTMLButtonElement;
    const documentLang = document.documentElement.lang;
    if (documentLang === l.dataset.lang) {
      lang.classList.add("active");
    } else {
      lang.classList.remove("active");
    }
  });
</script>

<script>
  function updateCDMXTime() {
    const now = new Date();

    const cdmxTime = now.toLocaleTimeString("en-US", {
      hour: "2-digit",
      minute: "2-digit",
      hour12: true,
      timeZone: "America/Mexico_City",
    });

    document.getElementById("local-time")!.textContent = cdmxTime;
  }

  updateCDMXTime();
  setInterval(updateCDMXTime, 60000);
</script>


<script>
  const contactSection = document.getElementById("contact")!;

  const observer = new IntersectionObserver(
    ([entry]) => {
      if (!(entry.isIntersecting && entry.intersectionRatio === 1)) {
        const navbar = document.getElementById("navbar") as HTMLDivElement;
        navbar.classList.remove("show");
      }
    },
    {
      threshold: 1.0,
    }
  );

  observer.observe(contactSection);
</script>
