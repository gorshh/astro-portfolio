---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import BlogLayout from "../../layouts/BlogLayout.astro";
import { topicToUrl } from "../../utils/topicToUrl";
import PostSection from "../../components/sections/Post.astro";
import LatestArticles from "../../components/sections/LatestArticles.astro";
import { getReadingTime } from "../../utils/readingTime";
import type { Post } from "../../types/post";
import Breadcrumb from "../../components/common/Breadcrumb.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  const topicSet = new Set<string>();
  const paths = [];

  for (const post of posts) {
    const topic = post.data.topic;

    paths.push({
      params: {
        slug: `/${topicToUrl(topic)}/${post.slug}`,
      },
      props: { entry: post },
    });

    topicSet.add(topic);
  }

  // Generar paths por topic
  for (const topic of topicSet) {
    paths.push({
      params: {
        slug: `/${topicToUrl(topic)}`,
      },
      props: { entry: topic },
    });
  }

  return paths;
}

type Props = {
  entry: CollectionEntry<"posts"> | string;
};

const { entry } = Astro.props;

const isPost = typeof entry === "object" && "render" in entry;
const isTopic =
  typeof entry === "string" ||
  (typeof entry === "object" && "topic" in entry && !("render" in entry));

let topicPosts: Post[] = [];

if (isTopic) {
  const allPosts = await getCollection("posts");

  topicPosts = allPosts
    .filter((p) => p.data.topic === entry)
    .map((p) => ({
      id: p.id,
      slug: p.slug,
      heroImage: p.data.heroImage,
      title: p.data.title,
      topic: p.data.topic,
      date: p.data.date,
      description: p.data.description,
      estimatedMinutes: getReadingTime(p.body),
    })).sort((a, b) => b.date.getTime() - a.date.getTime());

  // console.log(topicPosts)
}
---

{isPost && <PostSection entry={entry} />}

{
  isTopic && (
    <BlogLayout
      title={`Posts in ${entry}`}
      description={`Posts under the ${entry} topic`}
    ><section class="posts-container">
      <Breadcrumb
          topic={"Blog"}
          title={entry}
        />
      <LatestArticles posts={topicPosts} title={`Posts in ${entry}`}/>
    </section>
    </BlogLayout>

  )
}
<!-- <BlogLayout title={entry.data.title} description={entry.data.description}>
  <section class="post">
    <article class="article" id="blog-content">
      <header>
        <Breadcrumb
          topic={"Blog/" + entry.data.topic}
          title={entry.data.title}
        />
        <h1>{entry.data.title}</h1>
        <time class="posted-date" datetime={entry.data.date.toISOString()}
          >{formatDate(entry.data.date)}</time
        >
        <Image
          src={entry.data.heroImage}
          class="hero-image"
          alt={entry.data.title}
          inferSize
        />
      </header>

      <div>
        <Content />
      </div>
      <article class="tags">
        {
          entry.data.tags.map((tag) => (
            <a href={`/b/tags/${tag}`} class="tag">
              #{tag}
            </a>
          ))
        }
      </article>

      <footer class="article-footer">
        <dl>
          <div>
            <dt>Author</dt>
            <dd>{author.data.name}</dd>
            <dd>{author.data.bio}</dd>
          </div>
          <div>
            <dt>Posted on</dt>
            <dd>
              <time datetime={entry.data.date.toISOString()}
                >{formatDate(entry.data.date)}</time
              >
            </dd>
          </div>
        </dl>
      </footer>
    </article>
    <aside class="on-this-page" id="toc">
      <p>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          fill="currentColor"
          aria-hidden="true"
          class="on-this-page-icon"
          ><path
            d="M10.75 16.82A7.462 7.462 0 0115 15.5c.71 0 1.396.098 2.046.282A.75.75 0 0018 15.06v-11a.75.75 0 00-.546-.721A9.006 9.006 0 0015 3a8.963 8.963 0 00-4.25 1.065V16.82zM9.25 4.065A8.963 8.963 0 005 3c-.85 0-1.673.118-2.454.339A.75.75 0 002 4.06v11a.75.75 0 00.954.721A7.506 7.506 0 015 15.5c1.579 0 3.042.487 4.25 1.32V4.065z"
          ></path></svg
        >On this page
      </p>
      <slot />
    </aside>
  </section>
</BlogLayout> 
 -->
<style>
  .posts-container {
    max-width: 1280px;
    margin: 0 auto;
    margin-top: 4rem;
    padding: 0.75rem;
  }
</style>